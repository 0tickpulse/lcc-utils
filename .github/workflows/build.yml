name: maven-build
run-name: Building the project.
on: [ push ]
jobs:
    check-version:
        # check if version.txt exists
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Check if version.json exists
                run: |
                    if [ ! -f version.json ]; then
                    echo "version.json does not exist"
                    exit 1
                    fi

    build:
        if: ${{ needs.check-version.result == "success" }}
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Set up JDK 17
                uses: actions/setup-java@v1
                with:
                    java-version: 17
            -   name: Build with Maven
                run: mvn clean package install
            -   name: Check if release or snapshot
                uses: actions/github-script@v6
                id: check-env
                with:
                    result-encoding: string
                    script: |
                        try {
                            const fs = require("fs");
                            const jsonString = fs.readFileSync("./version.json");
                            const versionInfo = JSON.parse(jsonString);
                            if (versionInfo.snapshot) {
                                return "snapshot";
                            } else {
                                return "release";
                            }
                        } catch(err) {
                            core.error("Error while reading or parsing the JSON");
                            core.setFailed(err);
                        }
            -   name: Release
                if: ${{ steps.check-env.outputs.result == 'release' }}
                uses: actions/upload-artifact@v2
                with:
                    name: release
                    path: target/*.jar